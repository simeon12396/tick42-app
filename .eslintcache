[{"D:\\programming\\tick42-app\\src\\index.tsx":"1","D:\\programming\\tick42-app\\src\\reportWebVitals.ts":"2","D:\\programming\\tick42-app\\src\\App.tsx":"3","D:\\programming\\tick42-app\\src\\pages\\homePage\\homePage.tsx":"4","D:\\programming\\tick42-app\\src\\routing.tsx":"5","D:\\programming\\tick42-app\\src\\theme\\theme.tsx":"6","D:\\programming\\tick42-app\\src\\store\\index.ts":"7","D:\\programming\\tick42-app\\src\\store\\reducers\\index.ts":"8","D:\\programming\\tick42-app\\src\\store\\types\\companies\\companiesTypes.ts":"9","D:\\programming\\tick42-app\\src\\store\\actions\\companies\\companiesActions.ts":"10","D:\\programming\\tick42-app\\src\\services\\httpService.ts":"11","D:\\programming\\tick42-app\\src\\layouts\\mainLayout\\mainLayout.tsx":"12","D:\\programming\\tick42-app\\src\\components\\footer\\footer.tsx":"13","D:\\programming\\tick42-app\\src\\components\\customDrawer\\customDrawer.tsx":"14","D:\\programming\\tick42-app\\src\\components\\customAccordion\\customAccordion.tsx":"15","D:\\programming\\tick42-app\\src\\components\\customAccordion\\customAccordionSummary.tsx":"16","D:\\programming\\tick42-app\\src\\store\\reducers\\companiesReducer\\companiesReducer.ts":"17","D:\\programming\\tick42-app\\src\\store\\reducers\\employeesReducer\\employeesReducer.ts":"18","D:\\programming\\tick42-app\\src\\store\\types\\employees\\employeesTypes.ts":"19","D:\\programming\\tick42-app\\src\\store\\actions\\employees\\employeesActions.ts":"20","D:\\programming\\tick42-app\\src\\store\\reducers\\projectsReducer\\projectsReducer.ts":"21","D:\\programming\\tick42-app\\src\\store\\types\\projects\\projectsTypes.ts":"22","D:\\programming\\tick42-app\\src\\store\\actions\\projects\\projectsActions.ts":"23","D:\\programming\\tick42-app\\src\\store\\reducers\\companyAddressesReducer\\companyAddressesReducer.ts":"24","D:\\programming\\tick42-app\\src\\store\\types\\companyAddresses\\companyAddressesTypes.ts":"25","D:\\programming\\tick42-app\\src\\store\\actions\\companyAddresses\\companyAddressesActions.ts":"26","D:\\programming\\tick42-app\\src\\pages\\employeeDetaislPage\\employeeDetailsPage.tsx":"27","D:\\programming\\tick42-app\\src\\pages\\companyDetailsPage\\companyDetailsPage.tsx":"28","D:\\programming\\tick42-app\\src\\pages\\jobAreaDetailsPage\\jobAreaDetailsPage.tsx":"29","D:\\programming\\tick42-app\\src\\pages\\projectDetailsPage\\projectDetailsPage.tsx":"30","D:\\programming\\tick42-app\\src\\components\\customDropdown\\customDropdown.tsx":"31","D:\\programming\\tick42-app\\src\\components\\common\\customButton\\customButton.tsx":"32","D:\\programming\\tick42-app\\src\\components\\customFabButton\\customFabButton.tsx":"33","D:\\programming\\tick42-app\\src\\pages\\addProjectPage\\addProjectPage.tsx":"34","D:\\programming\\tick42-app\\src\\components\\common\\customTextField\\customTextField.tsx":"35","D:\\programming\\tick42-app\\src\\components\\common\\customProgress\\customProgress.tsx":"36"},{"size":888,"mtime":1608986768230,"results":"37","hashOfConfig":"38"},{"size":425,"mtime":1608750190066,"results":"39","hashOfConfig":"38"},{"size":184,"mtime":1608801678292,"results":"40","hashOfConfig":"38"},{"size":1074,"mtime":1609075332299,"results":"41","hashOfConfig":"38"},{"size":1517,"mtime":1609158891392,"results":"42","hashOfConfig":"38"},{"size":396,"mtime":1609103721581,"results":"43","hashOfConfig":"38"},{"size":390,"mtime":1608987123850,"results":"44","hashOfConfig":"38"},{"size":870,"mtime":1609067119778,"results":"45","hashOfConfig":"38"},{"size":69,"mtime":1609084205358,"results":"46","hashOfConfig":"38"},{"size":648,"mtime":1609066944494,"results":"47","hashOfConfig":"38"},{"size":448,"mtime":1608802970964,"results":"48","hashOfConfig":"38"},{"size":624,"mtime":1608810786074,"results":"49","hashOfConfig":"38"},{"size":221,"mtime":1608803974160,"results":"50","hashOfConfig":"38"},{"size":4605,"mtime":1609094863417,"results":"51","hashOfConfig":"38"},{"size":3636,"mtime":1609158891405,"results":"52","hashOfConfig":"38"},{"size":1096,"mtime":1609094845974,"results":"53","hashOfConfig":"38"},{"size":572,"mtime":1608821844709,"results":"54","hashOfConfig":"38"},{"size":574,"mtime":1609074372899,"results":"55","hashOfConfig":"38"},{"size":69,"mtime":1608821419175,"results":"56","hashOfConfig":"38"},{"size":744,"mtime":1609069235329,"results":"57","hashOfConfig":"38"},{"size":2856,"mtime":1609155155513,"results":"58","hashOfConfig":"38"},{"size":432,"mtime":1609155040965,"results":"59","hashOfConfig":"38"},{"size":1734,"mtime":1609155060612,"results":"60","hashOfConfig":"38"},{"size":650,"mtime":1609067077874,"results":"61","hashOfConfig":"38"},{"size":85,"mtime":1609066800956,"results":"62","hashOfConfig":"38"},{"size":787,"mtime":1609067494144,"results":"63","hashOfConfig":"38"},{"size":4156,"mtime":1609101830433,"results":"64","hashOfConfig":"38"},{"size":4943,"mtime":1609158891443,"results":"65","hashOfConfig":"38"},{"size":2666,"mtime":1609099393680,"results":"66","hashOfConfig":"38"},{"size":6451,"mtime":1609159574317,"results":"67","hashOfConfig":"38"},{"size":1115,"mtime":1609154295980,"results":"68","hashOfConfig":"38"},{"size":566,"mtime":1609149425097,"results":"69","hashOfConfig":"38"},{"size":836,"mtime":1609147832526,"results":"70","hashOfConfig":"38"},{"size":3421,"mtime":1609157729046,"results":"71","hashOfConfig":"38"},{"size":360,"mtime":1609153736838,"results":"72","hashOfConfig":"38"},{"size":246,"mtime":1609158890679,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"8l0r9n",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"76"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\programming\\tick42-app\\src\\index.tsx",[],["154","155"],"D:\\programming\\tick42-app\\src\\reportWebVitals.ts",[],"D:\\programming\\tick42-app\\src\\App.tsx",[],"D:\\programming\\tick42-app\\src\\pages\\homePage\\homePage.tsx",["156"],"import { Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { fetchCompanies } from \"../../store/actions/companies/companiesActions\";\r\nimport { fetchCompanyAddresses } from \"../../store/actions/companyAddresses/companyAddressesActions\";\r\nimport { fetchEmployees } from \"../../store/actions/employees/employeesActions\";\r\nimport { fetchProjects } from \"../../store/actions/projects/projectsActions\";\r\n\r\nconst HomePage = (): JSX.Element => {\r\n  const styles = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCompanies());\r\n    dispatch(fetchEmployees());\r\n    dispatch(fetchProjects());\r\n    dispatch(fetchCompanyAddresses());\r\n  }, []);\r\n\r\n  return (\r\n    <Typography variant=\"body1\" className={styles.title}>\r\n      Home Page\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n}));\r\n","D:\\programming\\tick42-app\\src\\routing.tsx",[],"D:\\programming\\tick42-app\\src\\theme\\theme.tsx",[],"D:\\programming\\tick42-app\\src\\store\\index.ts",[],"D:\\programming\\tick42-app\\src\\store\\reducers\\index.ts",[],"D:\\programming\\tick42-app\\src\\store\\types\\companies\\companiesTypes.ts",[],"D:\\programming\\tick42-app\\src\\store\\actions\\companies\\companiesActions.ts",[],"D:\\programming\\tick42-app\\src\\services\\httpService.ts",[],"D:\\programming\\tick42-app\\src\\layouts\\mainLayout\\mainLayout.tsx",[],"D:\\programming\\tick42-app\\src\\components\\footer\\footer.tsx",[],["157","158"],"D:\\programming\\tick42-app\\src\\components\\customDrawer\\customDrawer.tsx",[],"D:\\programming\\tick42-app\\src\\components\\customAccordion\\customAccordion.tsx",["159"],"import { Accordion, AccordionDetails, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport _ from \"lodash\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { ICompany } from \"../../store/actions/companies/companiesActions\";\r\nimport { IEmployee } from \"../../store/actions/employees/employeesActions\";\r\nimport { TRootState } from \"../../store/reducers\";\r\nimport CustomAlert from \"../common/customProgress/customAlert\";\r\nimport CustomAccordionSummary from \"./customAccordionSummary\";\r\n\r\nconst CustomAccordion = (): JSX.Element => {\r\n  const styles = useStyles();\r\n  const companiesSelector = useSelector((state: TRootState) => state.companiesReducer.rawData);\r\n  const employeesSelector = useSelector((state: TRootState) => state.employeesReducer.rawData);\r\n  const jobAreas = employeesSelector && _.uniq(employeesSelector.map((e: IEmployee) => e.jobArea));\r\n\r\n  if (!companiesSelector || !employeesSelector || !jobAreas) {\r\n    return <CustomAlert />;\r\n  }\r\n\r\n  return (\r\n    <Accordion classes={{ root: clsx(styles.accordionRoot, styles.generalAccordion) }}>\r\n      <CustomAccordionSummary ariaControls=\"company-content\" id=\"company-header\" typoVariant=\"body2\" typoTitle=\"Company Name\" />\r\n\r\n      <AccordionDetails classes={{ root: styles.accordionDetailsRoot }}>\r\n        {companiesSelector.map((c: ICompany) => (\r\n          <NavLink className={styles.customCaption} key={c.id} to={`/company/${c.id}`}>\r\n            {c.name}\r\n          </NavLink>\r\n        ))}\r\n        <Accordion classes={{ root: clsx(styles.accordionRoot, styles.generalAccordion) }}>\r\n          <CustomAccordionSummary ariaControls=\"employee-job-content\" id=\"employee-job-header\" typoVariant=\"body2\" typoTitle=\"Employee Job Area\" />\r\n\r\n          <AccordionDetails classes={{ root: styles.accordionDetailsRoot }}>\r\n            {jobAreas.map((j: string) => (\r\n              <NavLink className={styles.customCaption} key={j} to={`/job-area/${j}`}>\r\n                {j}\r\n              </NavLink>\r\n            ))}\r\n\r\n            <Accordion classes={{ root: clsx(styles.accordionRoot, styles.generalAccordion) }}>\r\n              <CustomAccordionSummary ariaControls=\"employee-name-content\" id=\"employee-name-header\" typoVariant=\"body2\" typoTitle=\"Employee Name\" />\r\n\r\n              <AccordionDetails classes={{ root: styles.accordionDetailsRoot }}>\r\n                {employeesSelector.map((e: IEmployee) => (\r\n                  <NavLink className={styles.customCaption} key={e.id} to={`/employee/${e.id}`}>\r\n                    {`${e.firstName} ${e.lastName}`}\r\n                  </NavLink>\r\n                ))}\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default CustomAccordion;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  accordionDetailsRoot: {\r\n    display: \"block\",\r\n    padding: `0px 0px 0px ${theme.spacing(2)}px`,\r\n  },\r\n  accordionRoot: {\r\n    boxShadow: \"none\",\r\n    margin: 0,\r\n\r\n    \"& .Mui-expanded\": {\r\n      marginRight: 0,\r\n    },\r\n\r\n    \"&::before\": {\r\n      height: \"0px\",\r\n    },\r\n  },\r\n  customCaption: {\r\n    display: \"block\",\r\n    textDecoration: \"none\",\r\n    color: theme.palette.primary.dark,\r\n    opacity: 0.8,\r\n    transition: \"all linear .1s\",\r\n\r\n    \"&:hover\": {\r\n      opacity: 1,\r\n      color: theme.palette.primary.main,\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n  generalAccordion: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n","D:\\programming\\tick42-app\\src\\components\\customAccordion\\customAccordionSummary.tsx",[],"D:\\programming\\tick42-app\\src\\store\\reducers\\companiesReducer\\companiesReducer.ts",[],"D:\\programming\\tick42-app\\src\\store\\reducers\\employeesReducer\\employeesReducer.ts",[],"D:\\programming\\tick42-app\\src\\store\\types\\employees\\employeesTypes.ts",[],"D:\\programming\\tick42-app\\src\\store\\actions\\employees\\employeesActions.ts",[],"D:\\programming\\tick42-app\\src\\store\\reducers\\projectsReducer\\projectsReducer.ts",[],"D:\\programming\\tick42-app\\src\\store\\types\\projects\\projectsTypes.ts",[],"D:\\programming\\tick42-app\\src\\store\\actions\\projects\\projectsActions.ts",[],"D:\\programming\\tick42-app\\src\\store\\reducers\\companyAddressesReducer\\companyAddressesReducer.ts",[],"D:\\programming\\tick42-app\\src\\store\\types\\companyAddresses\\companyAddressesTypes.ts",[],"D:\\programming\\tick42-app\\src\\store\\actions\\companyAddresses\\companyAddressesActions.ts",[],"D:\\programming\\tick42-app\\src\\pages\\employeeDetaislPage\\employeeDetailsPage.tsx",["160"],"import { makeStyles, Typography } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\nimport { IEmployee } from \"../../store/actions/employees/employeesActions\";\r\nimport { IProject } from \"../../store/actions/projects/projectsActions\";\r\nimport { TRootState } from \"../../store/reducers\";\r\n\r\ntype TRouteParams = {\r\n  id: string;\r\n};\r\n\r\nconst EmployeeDetailsPage = () => {\r\n  const styles = useStyles();\r\n  const { id } = useParams<TRouteParams>();\r\n\r\n  const [jobParticipates, setJobParticipates] = useState<string[] | []>([]);\r\n  const employeesSelector = useSelector((state: TRootState) => state.employeesReducer.rawData);\r\n  const projectSelector = useSelector((state: TRootState) => state.projectsReducer.rawData);\r\n\r\n  const foundEmployee = employeesSelector && employeesSelector.find((p: IEmployee) => p.id === id);\r\n  const foundEmployeeFullName = `${foundEmployee.firstName} ${foundEmployee.lastName}`;\r\n\r\n  const findEmployeesCollaboration = () => {\r\n    const employeesIds =\r\n      projectSelector &&\r\n      projectSelector.map((p: IProject) =>\r\n        p.employeesId.map((id) => {\r\n          if (id === foundEmployee.id) {\r\n            return setJobParticipates((currState) => [...currState, p.name]);\r\n          }\r\n          return [];\r\n        })\r\n      );\r\n\r\n    return employeesIds;\r\n  };\r\n\r\n  useEffect(() => {\r\n    setJobParticipates([]);\r\n    findEmployeesCollaboration();\r\n  }, [id]);\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\">Project details regarding to particular employee:</Typography>\r\n      <div className={styles.flexbox}>\r\n        <Typography variant=\"body1\" className={styles.employeeLabel}>\r\n          Name:\r\n        </Typography>\r\n        <Typography variant=\"body2\">{foundEmployeeFullName}</Typography>\r\n      </div>\r\n      <div className={styles.flexbox}>\r\n        <Typography variant=\"body1\" className={styles.employeeLabel}>\r\n          Date of birth:\r\n        </Typography>\r\n        <Typography variant=\"body2\">{foundEmployee.dateOfBirth.slice(0, 10)}</Typography>\r\n      </div>\r\n      <div className={styles.flexbox}>\r\n        <Typography variant=\"body1\" className={styles.employeeLabel}>\r\n          Job title:\r\n        </Typography>\r\n        <Typography variant=\"body2\">{foundEmployee.jobTitle}</Typography>\r\n      </div>\r\n      <div className={styles.flexbox}>\r\n        <Typography variant=\"body1\" className={styles.employeeLabel}>\r\n          Job Area:\r\n        </Typography>\r\n        <NavLink to={`/job-area/${foundEmployee.jobArea}`} className={styles.link}>\r\n          <Typography variant=\"body2\">{foundEmployee.jobArea}</Typography>\r\n        </NavLink>\r\n      </div>\r\n      <div className={styles.flexbox}>\r\n        <Typography variant=\"body1\" className={styles.employeeLabel}>\r\n          Job Type:\r\n        </Typography>\r\n        <Typography variant=\"body2\">{foundEmployee.jobType}</Typography>\r\n      </div>\r\n      <div className={clsx(styles.flexbox, styles.participationContainer)}>\r\n        <Typography variant=\"body1\" className={styles.employeeLabel}>\r\n          Job Participation:\r\n        </Typography>\r\n        {jobParticipates.length !== 0 ? (\r\n          <Typography variant=\"body2\">{jobParticipates.join()}</Typography>\r\n        ) : (\r\n          <Typography variant=\"body2\">{`${foundEmployeeFullName} doesn't have any job participations!!`}</Typography>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeDetailsPage;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  employeeLabel: {\r\n    color: theme.palette.primary.main,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  link: {\r\n    display: \"block\",\r\n    textDecoration: \"underline\",\r\n    color: theme.palette.primary.dark,\r\n    opacity: 0.8,\r\n    transition: \"all linear .1s\",\r\n\r\n    \"&:hover\": {\r\n      opacity: 1,\r\n      color: theme.palette.primary.main,\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n  flexbox: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  participationContainer: {\r\n    maxWidth: 500,\r\n  },\r\n}));\r\n","D:\\programming\\tick42-app\\src\\pages\\companyDetailsPage\\companyDetailsPage.tsx",["161"],"import { Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\nimport { ICompanyAddress } from \"../../store/actions/companyAddresses/companyAddressesActions\";\r\nimport { IProject, removeProjects } from \"../../store/actions/projects/projectsActions\";\r\nimport { TRootState } from \"../../store/reducers\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport CustomFabButton from \"../../components/customFabButton/customFabButton\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CustomAlert from \"../../components/common/customProgress/customAlert\";\r\n\r\ntype TRouteParams = {\r\n  id: string;\r\n};\r\n\r\nconst CompanyDetailsPage = (): JSX.Element => {\r\n  const styles = useStyles();\r\n  const { id } = useParams<TRouteParams>();\r\n  const dispatch = useDispatch();\r\n  const companiesSelector = useSelector((state: TRootState) => state.companiesReducer.rawData);\r\n  const projectsSelector = useSelector((state: TRootState) => state.projectsReducer.rawData);\r\n  const companyAddressesSelector = useSelector((state: TRootState) => state.companyAddressesReducer.rawData);\r\n\r\n  const [companyProjects, setCompanyProjects] = useState<IProject[]>([]);\r\n  const foundCompany = companyAddressesSelector.find((c: ICompanyAddress) => c.companyId === id);\r\n  const { companyId } = foundCompany;\r\n\r\n  const removeProject = (id: string) => {\r\n    const unremovedCompanyProjects = companyProjects.filter((p: IProject) => p.id !== id);\r\n    setCompanyProjects(unremovedCompanyProjects);\r\n    dispatch(removeProjects({ companyId, unremovedCompanyProjects }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const foundCompanyProjects = projectsSelector.filter((c: IProject) => c.companyId === id);\r\n    setCompanyProjects(foundCompanyProjects);\r\n  }, [companyId]);\r\n\r\n  if (!companiesSelector || !projectsSelector || !companyAddressesSelector) {\r\n    return <CustomAlert />;\r\n  }\r\n\r\n  return (\r\n    <div className={styles.companyContainer}>\r\n      <Typography variant=\"h5\">Company address details:</Typography>\r\n\r\n      <div className={styles.flexbox}>\r\n        <Typography variant=\"body1\" className={styles.projectLabel}>\r\n          City:\r\n        </Typography>\r\n        <Typography variant=\"body2\">{foundCompany.city}</Typography>\r\n      </div>\r\n\r\n      <div className={styles.flexbox}>\r\n        <Typography variant=\"body1\" className={styles.projectLabel}>\r\n          Country:\r\n        </Typography>\r\n        <Typography variant=\"body2\">{foundCompany.country}</Typography>\r\n      </div>\r\n\r\n      <div className={styles.flexbox}>\r\n        <Typography variant=\"body1\" className={styles.projectLabel}>\r\n          Street:\r\n        </Typography>\r\n        <Typography variant=\"body2\">{foundCompany.street}</Typography>\r\n      </div>\r\n\r\n      <div className={styles.flexbox}>\r\n        <Typography variant=\"body1\" className={styles.projectLabel}>\r\n          State:\r\n        </Typography>\r\n        <Typography variant=\"body2\">{foundCompany.state}</Typography>\r\n      </div>\r\n\r\n      <Typography variant=\"h5\">Company projects: </Typography>\r\n\r\n      <div>\r\n        {companyProjects.length === 0 ? (\r\n          <Typography variant=\"body2\" color=\"error\">\r\n            Attention! The company doesn't contain any projects!\r\n          </Typography>\r\n        ) : (\r\n          companyProjects.map((p: IProject) => (\r\n            <div key={p.id} className={styles.flexbox}>\r\n              <Typography variant=\"body1\" className={styles.projectLabel}>\r\n                Name:\r\n              </Typography>\r\n              <NavLink to={`/project-details/${p.id}`} className={styles.projectValue}>\r\n                {p.name}\r\n              </NavLink>\r\n              <CancelIcon onClick={() => removeProject(p.id)} className={styles.cancelIcon} />\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n\r\n      <CustomFabButton isLink={true} children={<AddIcon />} color=\"primary\" className={styles.plusButton} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompanyDetailsPage;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  companyContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  flexbox: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  projectLabel: {\r\n    color: theme.palette.primary.main,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  projectValue: {\r\n    display: \"block\",\r\n    textDecoration: \"none\",\r\n    color: theme.palette.primary.dark,\r\n    opacity: 0.8,\r\n    transition: \"all linear .1s\",\r\n\r\n    \"&:hover\": {\r\n      opacity: 1,\r\n      color: theme.palette.primary.main,\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n  cancelIcon: {\r\n    fill: theme.palette.error.main,\r\n    marginLeft: theme.spacing(0.5),\r\n  },\r\n  plusButton: {\r\n    position: \"fixed\",\r\n    bottom: theme.spacing(5),\r\n    right: theme.spacing(5),\r\n  },\r\n}));\r\n","D:\\programming\\tick42-app\\src\\pages\\jobAreaDetailsPage\\jobAreaDetailsPage.tsx",["162"],"import { Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { IEmployee } from \"../../store/actions/employees/employeesActions\";\r\nimport { IProject } from \"../../store/actions/projects/projectsActions\";\r\nimport { TRootState } from \"../../store/reducers\";\r\n\r\ntype TRouteParams = {\r\n  jobAreaName: string;\r\n};\r\n\r\nconst JobAreaDetailsPage = () => {\r\n  const styles = useStyles();\r\n  const { jobAreaName } = useParams<TRouteParams>();\r\n\r\n  const [employeeCollaborationCounter, setEmployeeCollaborationCounter] = useState<number>(0);\r\n  const employeesSelector = useSelector((state: TRootState) => state.employeesReducer.rawData);\r\n  const workingEmployees = employeesSelector && employeesSelector.filter((p: IEmployee) => p.jobArea === jobAreaName);\r\n  const projectsSelector = useSelector((state: TRootState) => state.projectsReducer.rawData);\r\n\r\n  const findEmployeesCollaboration = () => {\r\n    const employeesIds =\r\n      projectsSelector &&\r\n      projectsSelector.map((project: IProject) =>\r\n        project.employeesId.map((id) =>\r\n          workingEmployees.find((workingEmployee: IEmployee) => {\r\n            if (workingEmployee.id === id) {\r\n              setEmployeeCollaborationCounter((currentState) => currentState + 1);\r\n            }\r\n            return workingEmployee.id === id;\r\n          })\r\n        )\r\n      );\r\n\r\n    return employeesIds;\r\n  };\r\n\r\n  useEffect(() => {\r\n    setEmployeeCollaborationCounter(0);\r\n    findEmployeesCollaboration();\r\n  }, [jobAreaName]);\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\">Job area details: {jobAreaName}</Typography>\r\n      <div className={styles.flexbox}>\r\n        <Typography variant=\"body1\" className={styles.jobAreaLabel}>\r\n          The number of employees which are working in that area:\r\n        </Typography>\r\n        <Typography variant=\"body2\">{workingEmployees.length}</Typography>\r\n      </div>\r\n      <div className={styles.flexbox}>\r\n        <Typography variant=\"body1\" className={styles.jobAreaLabel}>\r\n          The number of employees with have a collaboration in the other projects:\r\n        </Typography>\r\n        <Typography variant=\"body2\">{employeeCollaborationCounter}</Typography>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobAreaDetailsPage;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  flexbox: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  jobAreaLabel: {\r\n    color: theme.palette.primary.main,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n","D:\\programming\\tick42-app\\src\\pages\\projectDetailsPage\\projectDetailsPage.tsx",[],"D:\\programming\\tick42-app\\src\\components\\customDropdown\\customDropdown.tsx",[],"D:\\programming\\tick42-app\\src\\components\\common\\customButton\\customButton.tsx",[],"D:\\programming\\tick42-app\\src\\components\\customFabButton\\customFabButton.tsx",[],"D:\\programming\\tick42-app\\src\\pages\\addProjectPage\\addProjectPage.tsx",[],"D:\\programming\\tick42-app\\src\\components\\common\\customTextField\\customTextField.tsx",["163"],"import { TextField, TextFieldProps } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\n\r\nconst CustomTextField = (props: TextFieldProps) => {\r\n  const styles = useStyles();\r\n  return <TextField {...props} />;\r\n};\r\n\r\nexport default CustomTextField;\r\n\r\nconst useStyles = makeStyles((theme) => ({}));\r\n","D:\\programming\\tick42-app\\src\\components\\common\\customProgress\\customProgress.tsx",[],{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":19,"column":6,"nodeType":"170","endLine":19,"endColumn":8,"suggestions":"171"},{"ruleId":"164","replacedBy":"172"},{"ruleId":"166","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":1,"column":39,"nodeType":"176","messageId":"177","endLine":1,"endColumn":49},{"ruleId":"168","severity":1,"message":"178","line":43,"column":6,"nodeType":"170","endLine":43,"endColumn":10,"suggestions":"179"},{"ruleId":"168","severity":1,"message":"180","line":39,"column":6,"nodeType":"170","endLine":39,"endColumn":17,"suggestions":"181"},{"ruleId":"168","severity":1,"message":"178","line":43,"column":6,"nodeType":"170","endLine":43,"endColumn":19,"suggestions":"182"},{"ruleId":"174","severity":1,"message":"183","line":6,"column":9,"nodeType":"176","messageId":"177","endLine":6,"endColumn":15},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["186"],["184"],["185"],"@typescript-eslint/no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'findEmployeesCollaboration'. Either include it or remove the dependency array.",["187"],"React Hook useEffect has missing dependencies: 'id' and 'projectsSelector'. Either include them or remove the dependency array.",["188"],["189"],"'styles' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},"Update the dependencies array to be: [dispatch]",{"range":"198","text":"199"},"Update the dependencies array to be: [findEmployeesCollaboration, id]",{"range":"200","text":"201"},"Update the dependencies array to be: [companyId, id, projectsSelector]",{"range":"202","text":"203"},"Update the dependencies array to be: [findEmployeesCollaboration, jobAreaName]",{"range":"204","text":"205"},[811,813],"[dispatch]",[1550,1554],"[findEmployeesCollaboration, id]",[1928,1939],"[companyId, id, projectsSelector]",[1663,1676],"[findEmployeesCollaboration, jobAreaName]"]