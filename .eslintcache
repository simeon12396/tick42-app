[{"D:\\programming\\tick42-app\\src\\index.tsx":"1","D:\\programming\\tick42-app\\src\\reportWebVitals.ts":"2","D:\\programming\\tick42-app\\src\\App.tsx":"3","D:\\programming\\tick42-app\\src\\pages\\homePage\\homePage.tsx":"4","D:\\programming\\tick42-app\\src\\routing.tsx":"5","D:\\programming\\tick42-app\\src\\theme\\theme.tsx":"6","D:\\programming\\tick42-app\\src\\store\\index.ts":"7","D:\\programming\\tick42-app\\src\\store\\reducers\\index.ts":"8","D:\\programming\\tick42-app\\src\\store\\types\\companies\\companiesTypes.ts":"9","D:\\programming\\tick42-app\\src\\store\\actions\\companies\\companiesActions.ts":"10","D:\\programming\\tick42-app\\src\\services\\httpService.ts":"11","D:\\programming\\tick42-app\\src\\layouts\\mainLayout\\mainLayout.tsx":"12","D:\\programming\\tick42-app\\src\\components\\footer\\footer.tsx":"13","D:\\programming\\tick42-app\\src\\components\\customDrawer\\customDrawer.tsx":"14","D:\\programming\\tick42-app\\src\\components\\customAccordion\\customAccordion.tsx":"15","D:\\programming\\tick42-app\\src\\components\\customAccordion\\customAccordionSummary.tsx":"16","D:\\programming\\tick42-app\\src\\store\\reducers\\companiesReducer\\companiesReducer.ts":"17","D:\\programming\\tick42-app\\src\\store\\reducers\\employeesReducer\\employeesReducer.ts":"18","D:\\programming\\tick42-app\\src\\store\\types\\employees\\employeesTypes.ts":"19","D:\\programming\\tick42-app\\src\\store\\actions\\employees\\employeesActions.ts":"20","D:\\programming\\tick42-app\\src\\store\\reducers\\projectsReducer\\projectsReducer.ts":"21","D:\\programming\\tick42-app\\src\\store\\types\\projects\\projectsTypes.ts":"22","D:\\programming\\tick42-app\\src\\store\\actions\\projects\\projectsActions.ts":"23","D:\\programming\\tick42-app\\src\\store\\reducers\\companyAddressesReducer\\companyAddressesReducer.ts":"24","D:\\programming\\tick42-app\\src\\store\\types\\companyAddresses\\companyAddressesTypes.ts":"25","D:\\programming\\tick42-app\\src\\store\\actions\\companyAddresses\\companyAddressesActions.ts":"26","D:\\programming\\tick42-app\\src\\pages\\employeeDetaislPage\\employeeDetailsPage.tsx":"27","D:\\programming\\tick42-app\\src\\pages\\companyDetailsPage\\companyDetailsPage.tsx":"28","D:\\programming\\tick42-app\\src\\pages\\jobAreaDetailsPage\\jobAreaDetailsPage.tsx":"29","D:\\programming\\tick42-app\\src\\pages\\projectDetailsPage\\projectDetailsPage.tsx":"30","D:\\programming\\tick42-app\\src\\components\\customDropdown\\customDropdown.tsx":"31","D:\\programming\\tick42-app\\src\\components\\common\\customButton\\customButton.tsx":"32","D:\\programming\\tick42-app\\src\\components\\customFabButton\\customFabButton.tsx":"33","D:\\programming\\tick42-app\\src\\pages\\addProjectPage\\addProjectPage.tsx":"34","D:\\programming\\tick42-app\\src\\components\\common\\customTextField\\customTextField.tsx":"35"},{"size":888,"mtime":1608986768230,"results":"36","hashOfConfig":"37"},{"size":425,"mtime":1608750190066,"results":"38","hashOfConfig":"37"},{"size":184,"mtime":1608801678292,"results":"39","hashOfConfig":"37"},{"size":1074,"mtime":1609075332299,"results":"40","hashOfConfig":"37"},{"size":1437,"mtime":1609103718639,"results":"41","hashOfConfig":"37"},{"size":396,"mtime":1609103721581,"results":"42","hashOfConfig":"37"},{"size":390,"mtime":1608987123850,"results":"43","hashOfConfig":"37"},{"size":870,"mtime":1609067119778,"results":"44","hashOfConfig":"37"},{"size":69,"mtime":1609084205358,"results":"45","hashOfConfig":"37"},{"size":648,"mtime":1609066944494,"results":"46","hashOfConfig":"37"},{"size":448,"mtime":1608802970964,"results":"47","hashOfConfig":"37"},{"size":624,"mtime":1608810786074,"results":"48","hashOfConfig":"37"},{"size":221,"mtime":1608803974160,"results":"49","hashOfConfig":"37"},{"size":4605,"mtime":1609094863417,"results":"50","hashOfConfig":"37"},{"size":3605,"mtime":1609099269216,"results":"51","hashOfConfig":"37"},{"size":1096,"mtime":1609094845974,"results":"52","hashOfConfig":"37"},{"size":572,"mtime":1608821844709,"results":"53","hashOfConfig":"37"},{"size":574,"mtime":1609074372899,"results":"54","hashOfConfig":"37"},{"size":69,"mtime":1608821419175,"results":"55","hashOfConfig":"37"},{"size":744,"mtime":1609069235329,"results":"56","hashOfConfig":"37"},{"size":2856,"mtime":1609155155513,"results":"57","hashOfConfig":"37"},{"size":432,"mtime":1609155040965,"results":"58","hashOfConfig":"37"},{"size":1734,"mtime":1609155060612,"results":"59","hashOfConfig":"37"},{"size":650,"mtime":1609067077874,"results":"60","hashOfConfig":"37"},{"size":85,"mtime":1609066800956,"results":"61","hashOfConfig":"37"},{"size":787,"mtime":1609067494144,"results":"62","hashOfConfig":"37"},{"size":4156,"mtime":1609101830433,"results":"63","hashOfConfig":"37"},{"size":4898,"mtime":1609154801211,"results":"64","hashOfConfig":"37"},{"size":2666,"mtime":1609099393680,"results":"65","hashOfConfig":"37"},{"size":6451,"mtime":1609155731373,"results":"66","hashOfConfig":"37"},{"size":1115,"mtime":1609154295980,"results":"67","hashOfConfig":"37"},{"size":566,"mtime":1609149425097,"results":"68","hashOfConfig":"37"},{"size":836,"mtime":1609147832526,"results":"69","hashOfConfig":"37"},{"size":3421,"mtime":1609155940230,"results":"70","hashOfConfig":"37"},{"size":360,"mtime":1609153736838,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"8l0r9n",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"74"},"D:\\programming\\tick42-app\\src\\index.tsx",[],["148","149"],"D:\\programming\\tick42-app\\src\\reportWebVitals.ts",[],"D:\\programming\\tick42-app\\src\\App.tsx",[],"D:\\programming\\tick42-app\\src\\pages\\homePage\\homePage.tsx",["150"],"import { Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { fetchCompanies } from \"../../store/actions/companies/companiesActions\";\r\nimport { fetchCompanyAddresses } from \"../../store/actions/companyAddresses/companyAddressesActions\";\r\nimport { fetchEmployees } from \"../../store/actions/employees/employeesActions\";\r\nimport { fetchProjects } from \"../../store/actions/projects/projectsActions\";\r\n\r\nconst HomePage = (): JSX.Element => {\r\n  const styles = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCompanies());\r\n    dispatch(fetchEmployees());\r\n    dispatch(fetchProjects());\r\n    dispatch(fetchCompanyAddresses());\r\n  }, []);\r\n\r\n  return (\r\n    <Typography variant=\"body1\" className={styles.title}>\r\n      Home Page\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n}));\r\n","D:\\programming\\tick42-app\\src\\routing.tsx",[],"D:\\programming\\tick42-app\\src\\theme\\theme.tsx",[],"D:\\programming\\tick42-app\\src\\store\\index.ts",[],"D:\\programming\\tick42-app\\src\\store\\reducers\\index.ts",[],"D:\\programming\\tick42-app\\src\\store\\types\\companies\\companiesTypes.ts",[],"D:\\programming\\tick42-app\\src\\store\\actions\\companies\\companiesActions.ts",[],"D:\\programming\\tick42-app\\src\\services\\httpService.ts",[],"D:\\programming\\tick42-app\\src\\layouts\\mainLayout\\mainLayout.tsx",[],"D:\\programming\\tick42-app\\src\\components\\footer\\footer.tsx",[],["151","152"],"D:\\programming\\tick42-app\\src\\components\\customDrawer\\customDrawer.tsx",[],"D:\\programming\\tick42-app\\src\\components\\customAccordion\\customAccordion.tsx",[],"D:\\programming\\tick42-app\\src\\components\\customAccordion\\customAccordionSummary.tsx",[],"D:\\programming\\tick42-app\\src\\store\\reducers\\companiesReducer\\companiesReducer.ts",[],"D:\\programming\\tick42-app\\src\\store\\reducers\\employeesReducer\\employeesReducer.ts",[],"D:\\programming\\tick42-app\\src\\store\\types\\employees\\employeesTypes.ts",[],"D:\\programming\\tick42-app\\src\\store\\actions\\employees\\employeesActions.ts",[],"D:\\programming\\tick42-app\\src\\store\\reducers\\projectsReducer\\projectsReducer.ts",[],"D:\\programming\\tick42-app\\src\\store\\types\\projects\\projectsTypes.ts",[],"D:\\programming\\tick42-app\\src\\store\\actions\\projects\\projectsActions.ts",[],"D:\\programming\\tick42-app\\src\\store\\reducers\\companyAddressesReducer\\companyAddressesReducer.ts",[],"D:\\programming\\tick42-app\\src\\store\\types\\companyAddresses\\companyAddressesTypes.ts",[],"D:\\programming\\tick42-app\\src\\store\\actions\\companyAddresses\\companyAddressesActions.ts",[],"D:\\programming\\tick42-app\\src\\pages\\employeeDetaislPage\\employeeDetailsPage.tsx",["153"],"import { makeStyles, Typography } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\nimport { IEmployee } from \"../../store/actions/employees/employeesActions\";\r\nimport { IProject } from \"../../store/actions/projects/projectsActions\";\r\nimport { TRootState } from \"../../store/reducers\";\r\n\r\ntype TRouteParams = {\r\n  id: string;\r\n};\r\n\r\nconst EmployeeDetailsPage = () => {\r\n  const styles = useStyles();\r\n  const { id } = useParams<TRouteParams>();\r\n\r\n  const [jobParticipates, setJobParticipates] = useState<string[] | []>([]);\r\n  const employeesSelector = useSelector((state: TRootState) => state.employeesReducer.rawData);\r\n  const projectSelector = useSelector((state: TRootState) => state.projectsReducer.rawData);\r\n\r\n  const foundEmployee = employeesSelector && employeesSelector.find((p: IEmployee) => p.id === id);\r\n  const foundEmployeeFullName = `${foundEmployee.firstName} ${foundEmployee.lastName}`;\r\n\r\n  const findEmployeesCollaboration = () => {\r\n    const employeesIds =\r\n      projectSelector &&\r\n      projectSelector.map((p: IProject) =>\r\n        p.employeesId.map((id) => {\r\n          if (id === foundEmployee.id) {\r\n            return setJobParticipates((currState) => [...currState, p.name]);\r\n          }\r\n          return [];\r\n        })\r\n      );\r\n\r\n    return employeesIds;\r\n  };\r\n\r\n  useEffect(() => {\r\n    setJobParticipates([]);\r\n    findEmployeesCollaboration();\r\n  }, [id]);\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\">Project details regarding to particular employee:</Typography>\r\n      <div className={styles.flexbox}>\r\n        <Typography variant=\"body1\" className={styles.employeeLabel}>\r\n          Name:\r\n        </Typography>\r\n        <Typography variant=\"body2\">{foundEmployeeFullName}</Typography>\r\n      </div>\r\n      <div className={styles.flexbox}>\r\n        <Typography variant=\"body1\" className={styles.employeeLabel}>\r\n          Date of birth:\r\n        </Typography>\r\n        <Typography variant=\"body2\">{foundEmployee.dateOfBirth.slice(0, 10)}</Typography>\r\n      </div>\r\n      <div className={styles.flexbox}>\r\n        <Typography variant=\"body1\" className={styles.employeeLabel}>\r\n          Job title:\r\n        </Typography>\r\n        <Typography variant=\"body2\">{foundEmployee.jobTitle}</Typography>\r\n      </div>\r\n      <div className={styles.flexbox}>\r\n        <Typography variant=\"body1\" className={styles.employeeLabel}>\r\n          Job Area:\r\n        </Typography>\r\n        <NavLink to={`/job-area/${foundEmployee.jobArea}`} className={styles.link}>\r\n          <Typography variant=\"body2\">{foundEmployee.jobArea}</Typography>\r\n        </NavLink>\r\n      </div>\r\n      <div className={styles.flexbox}>\r\n        <Typography variant=\"body1\" className={styles.employeeLabel}>\r\n          Job Type:\r\n        </Typography>\r\n        <Typography variant=\"body2\">{foundEmployee.jobType}</Typography>\r\n      </div>\r\n      <div className={clsx(styles.flexbox, styles.participationContainer)}>\r\n        <Typography variant=\"body1\" className={styles.employeeLabel}>\r\n          Job Participation:\r\n        </Typography>\r\n        {jobParticipates.length !== 0 ? (\r\n          <Typography variant=\"body2\">{jobParticipates.join()}</Typography>\r\n        ) : (\r\n          <Typography variant=\"body2\">{`${foundEmployeeFullName} doesn't have any job participations!!`}</Typography>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeDetailsPage;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  employeeLabel: {\r\n    color: theme.palette.primary.main,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  link: {\r\n    display: \"block\",\r\n    textDecoration: \"underline\",\r\n    color: theme.palette.primary.dark,\r\n    opacity: 0.8,\r\n    transition: \"all linear .1s\",\r\n\r\n    \"&:hover\": {\r\n      opacity: 1,\r\n      color: theme.palette.primary.main,\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n  flexbox: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  participationContainer: {\r\n    maxWidth: 500,\r\n  },\r\n}));\r\n","D:\\programming\\tick42-app\\src\\pages\\companyDetailsPage\\companyDetailsPage.tsx",["154"],"D:\\programming\\tick42-app\\src\\pages\\jobAreaDetailsPage\\jobAreaDetailsPage.tsx",["155"],"import { Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { IEmployee } from \"../../store/actions/employees/employeesActions\";\r\nimport { IProject } from \"../../store/actions/projects/projectsActions\";\r\nimport { TRootState } from \"../../store/reducers\";\r\n\r\ntype TRouteParams = {\r\n  jobAreaName: string;\r\n};\r\n\r\nconst JobAreaDetailsPage = () => {\r\n  const styles = useStyles();\r\n  const { jobAreaName } = useParams<TRouteParams>();\r\n\r\n  const [employeeCollaborationCounter, setEmployeeCollaborationCounter] = useState<number>(0);\r\n  const employeesSelector = useSelector((state: TRootState) => state.employeesReducer.rawData);\r\n  const workingEmployees = employeesSelector && employeesSelector.filter((p: IEmployee) => p.jobArea === jobAreaName);\r\n  const projectsSelector = useSelector((state: TRootState) => state.projectsReducer.rawData);\r\n\r\n  const findEmployeesCollaboration = () => {\r\n    const employeesIds =\r\n      projectsSelector &&\r\n      projectsSelector.map((project: IProject) =>\r\n        project.employeesId.map((id) =>\r\n          workingEmployees.find((workingEmployee: IEmployee) => {\r\n            if (workingEmployee.id === id) {\r\n              setEmployeeCollaborationCounter((currentState) => currentState + 1);\r\n            }\r\n            return workingEmployee.id === id;\r\n          })\r\n        )\r\n      );\r\n\r\n    return employeesIds;\r\n  };\r\n\r\n  useEffect(() => {\r\n    setEmployeeCollaborationCounter(0);\r\n    findEmployeesCollaboration();\r\n  }, [jobAreaName]);\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\">Job area details: {jobAreaName}</Typography>\r\n      <div className={styles.flexbox}>\r\n        <Typography variant=\"body1\" className={styles.jobAreaLabel}>\r\n          The number of employees which are working in that area:\r\n        </Typography>\r\n        <Typography variant=\"body2\">{workingEmployees.length}</Typography>\r\n      </div>\r\n      <div className={styles.flexbox}>\r\n        <Typography variant=\"body1\" className={styles.jobAreaLabel}>\r\n          The number of employees with have a collaboration in the other projects:\r\n        </Typography>\r\n        <Typography variant=\"body2\">{employeeCollaborationCounter}</Typography>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobAreaDetailsPage;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  flexbox: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  jobAreaLabel: {\r\n    color: theme.palette.primary.main,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n","D:\\programming\\tick42-app\\src\\pages\\projectDetailsPage\\projectDetailsPage.tsx",[],"D:\\programming\\tick42-app\\src\\components\\customDropdown\\customDropdown.tsx",[],"D:\\programming\\tick42-app\\src\\components\\common\\customButton\\customButton.tsx",[],"D:\\programming\\tick42-app\\src\\components\\customFabButton\\customFabButton.tsx",[],"D:\\programming\\tick42-app\\src\\pages\\addProjectPage\\addProjectPage.tsx",[],"D:\\programming\\tick42-app\\src\\components\\common\\customTextField\\customTextField.tsx",["156"],"import { TextField, TextFieldProps } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\n\r\nconst CustomTextField = (props: TextFieldProps) => {\r\n  const styles = useStyles();\r\n  return <TextField {...props} />;\r\n};\r\n\r\nexport default CustomTextField;\r\n\r\nconst useStyles = makeStyles((theme) => ({}));\r\n",{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":19,"column":6,"nodeType":"163","endLine":19,"endColumn":8,"suggestions":"164"},{"ruleId":"157","replacedBy":"165"},{"ruleId":"159","replacedBy":"166"},{"ruleId":"161","severity":1,"message":"167","line":43,"column":6,"nodeType":"163","endLine":43,"endColumn":10,"suggestions":"168"},{"ruleId":"161","severity":1,"message":"169","line":38,"column":6,"nodeType":"163","endLine":38,"endColumn":17,"suggestions":"170"},{"ruleId":"161","severity":1,"message":"167","line":43,"column":6,"nodeType":"163","endLine":43,"endColumn":19,"suggestions":"171"},{"ruleId":"172","severity":1,"message":"173","line":6,"column":9,"nodeType":"174","messageId":"175","endLine":6,"endColumn":15},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["178"],["176"],["177"],"React Hook useEffect has a missing dependency: 'findEmployeesCollaboration'. Either include it or remove the dependency array.",["179"],"React Hook useEffect has missing dependencies: 'id' and 'projectsSelector'. Either include them or remove the dependency array.",["180"],["181"],"@typescript-eslint/no-unused-vars","'styles' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},"Update the dependencies array to be: [dispatch]",{"range":"190","text":"191"},"Update the dependencies array to be: [findEmployeesCollaboration, id]",{"range":"192","text":"193"},"Update the dependencies array to be: [companyId, id, projectsSelector]",{"range":"194","text":"195"},"Update the dependencies array to be: [findEmployeesCollaboration, jobAreaName]",{"range":"196","text":"197"},[811,813],"[dispatch]",[1550,1554],"[findEmployeesCollaboration, id]",[1852,1863],"[companyId, id, projectsSelector]",[1663,1676],"[findEmployeesCollaboration, jobAreaName]"]